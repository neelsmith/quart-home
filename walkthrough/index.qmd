---
title: "A walkthrough: the American Declaration of Independence"
---

```{julia}
#| output: false
#| echo: false
fullinfo = true


# Set up Julia environment:
using Pkg
pkglist = [
    "CitableBase", 
    "CitableText", "CitableObject", "CitableImage",
    "CitableCorpus",

    "Orthography", "CitableTeiReaders", "EditionBuilders",
    "CitablePhysicalText",

    "VectorAlignments"
]
for p in pkglist
    Pkg.add(p)    
end

using Markdown

if fullinfo
    allpkgs = map(collect(keys(Pkg.dependencies()))) do uukey
        Pkg.dependencies()[uukey]
    end
    pkglistinfo = filter(pi -> pi.name in pkglist, allpkgs) 
    pkglist_md = map(p -> string("- ", p.name, " ", p.version), pkglistinfo) |> sort
else
    pkglist_md = "TBA"
end
```

::: {.callout-tip collapse="true"}
`{julia} string("## See versions of Julia packages used on this page","\n\n", "This page was compiled with the following  versions of the packages illustrated here:", "\n\n", join(pkglist_md,"\n")) |> Markdown.parse`
:::

## Background and sources

The historian and classicist Danielle Allen offers a new interpretation of the American Declaration of Independence that is literally based on a new reading: she punctuates the text differently from most printed editions. (See her book [@allen2014] and the subsequent manuscript available from the Institute for Advanced Study [@allen2015].)

This page briefly illustrates how we could apply the Julia packages for citation and for working with digital texts to the problem of reading the text of the Declaration.

### Sources

1.  The U.S. National Archives has published freely available, high-resolution images of both the original signed parchment, and a widely used engraved reproduction. (See the presentation of the Declaration of Independence from the [National Archives](https://www.archives.gov/founding-docs/declaration), with links to [downloadable images](https://www.archives.gov/founding-docs/downloads)) These images have been added to the Homer Multitext project's citable image service.
2.  Two transcriptions of the text in TEI-compliant XML are included in this site's github repository:
    -   [transcription 1](https://raw.githubusercontent.com/neelsmith/quart-home/main/walkthrough/adoi/declaration_engraving.xml): a transcription of the text of the engraving, taken from [this page](https://www.archives.gov/founding-docs/declaration-transcript) of the National Archives web site
    -   [transcription 2](https://raw.githubusercontent.com/neelsmith/quart-home/main/walkthrough/adoi/declaration_original.xml): a transcription of the text from the image of the original parchment
3.  The relations of text, pages and documentary image are documented in a delimited-text file in this site's github repository [here](https://raw.githubusercontent.com/neelsmith/quart-home/main/walkthrough/adoi/declaration.cex).

## Citation with URNs

### Citing texts

Cite the text of the original and the engraving using `CtsUrn`s with different version identifiers.

```{julia}
#| output: false
using CitableBase, CitableText
engraving_text = CtsUrn("urn:cts:citeusnatarch:foundingdocuments.declindep.engraving:")
original_text = CtsUrn("urn:cts:citeusnatarch:foundingdocuments.declindep.original:")
```

::: callout-tip
## Learn more about [citation with `CtsUrn`s](../cite/urns/cts.qmd)
:::

### Citing objects

Identify a collection of pages (front and back) for the original and for the engraving using `Cite2Urn`s.

```{julia}
#| output: false
using CitableObject
engraving_pages = Cite2Urn("urn:cite2:citeusnatarch:declindep.engraving:")
original_pages = Cite2Urn("urn:cite2:citeusnatarch:declindep.original:")
```

::: callout-tip
## Learn more about [citation with `Cite2Urn`s](../cite/urns/cite2.qmd)
:::

### Citing images

Identify documentary images for the front of the parchment and the first page of the engraving using `Cite2Urn`s.

```{julia}
#| output: false
original_img1 = Cite2Urn("urn:cite2:citeusnatarch:declindep.v1:Declaration_Pg1of1_AC")
engraving_img1 = Cite2Urn("urn:cite2:citeusnatarch:declindep.v1:Declaration_Engrav_Pg1of1_AC")
```

## Digital texts

### Orthography

Define an orthographic system for the texts we will read.

```{julia}
#| output: false
using Orthography
ortho = simpleAscii()
```

::: callout-tip
## Learn more about [orthography](../digitexts/orthography/)
:::

### Create citable texts

Read the XML source from a URL, and make the marked-up content accessible through canonical citation with the `CitableTeiReaders` package.

```{julia}
#| output: false
using CitableTeiReaders
engraving_url = "https://raw.githubusercontent.com/neelsmith/quart-home/main/walkthrough/adoi/declaration_engraving.xml"
engraving_corpus = readcitable(engraving_url, engraving_text, TEIAnonblock, UrlReader)

original_url = "https://raw.githubusercontent.com/neelsmith/quart-home/main/walkthrough/adoi/declaration_original.xml"
original_corpus = readcitable(original_url, engraving_text, TEIAnonblock, UrlReader)
```

Compose a univocal diplomatic edition from the multivalent XML document with the `EditionBuilders` package.

```{julia}
#| output: false
using EditionBuilders
builder = MidDiplomaticBuilder("Diplomatic edition buidler", "dipl")
engraving_dipl = edited(builder, engraving_corpus; edition = "engraving_dip")
original_dipl = edited(builder, original_corpus; edition = "original_dipl")
```

::: callout-tip
## Learn more about creating citable texts

-   [making markup citable](../digitexts/editions/markupreaders.qmd)
-   [building univocal editions](../digitexts/editions/editionbuilders.qmd)
:::

### A full digital scholarly edition

#### Collect relations of text, image and artifact

Read records relating text, image and artifact using the `CitablePhysicalText` package.

```{julia}
#| output: false
using CitablePhysicalText
delimited_url = "https://raw.githubusercontent.com/neelsmith/quart-home/main/walkthrough/adoi/declaration.cex"
triplesets = fromcex(delimited_url, DSECollection, UrlReader)
```

::: callout-tip
## Learn more about [modelling physical texts](../digitexts/physical/). 
:::

#### Services for images

Configure the Homer Mulitext project's image service using the `CitableImage` package.

```{julia}
#| output: false
using CitableImage
imgbaseurl = "http://www.homermultitext.org/iipsrv"
imgroot = "/project/homer/pyramidal/deepzoom"
imgservice = IIIFservice(imgbaseurl, imgroot)
```

::: callout-tip
## Learn more about [citable image services](../cite/urns/imgs.qmd)
:::



## Application: explore differences in the texts visually

:::{.callout-warning}
## TBA
:::


-   computationally identify sections where texts differ
-   show image of section, linked to ICT
-   manually use the Homer Multitext project's Image Citation Tool to zoom in to more specific region of interest and cite it with a URN. Here we save references to the region of two images illustrating the word "Happiness."

```{julia}
happiness_engraving = Cite2Urn("urn:cite2:citeusnatarch:declindep.v1:Declaration_Engrav_Pg1of1_AC@0.4672,0.1935,0.07188,0.01804")
happiness_original = Cite2Urn("urn:cite2:citeusnatarch:declindep.v1:Declaration_Pg1of1_AC@0.4765,0.1892,0.07596,0.01857")
```

## Application: organize differences in the texts as a sequence alignment


:::{.callout-warning}
## TBA
:::


```{julia}
using CitableCorpus

"""True if text content of tokens in two citable passages matches."""
function tokensmatch(psg1::CitableCorpus.CitablePassage, psg2::CitableCorpus.CitablePassage, orthography::OrthographicSystem)
    tkns1 = tokenize(psg1,ortho)
    tkns2 = tokenize(psg2,ortho)
    text1 = map(t -> t.passage.text, tkns1)
    text2 = map(t -> t.passage.text, tkns2)
    text1 == text2
end
```


::: callout-tip
## Learn more about [citable text corpora](../digitexts/editions/citablecorpora.qmd)
:::


```{julia}
using VectorAlignments
difflist = []   
for (orig,dipl) in zip(original_dipl.passages, engraving_dipl.passages)
    if ! tokensmatch(orig,dipl,ortho)
        push!(difflist,(orig,dipl))
    end
end
difflist

#x = tokensmatch(original_dipl.passages[4], engraving_dipl.passages[4], ortho)
#end
#x = zip(original_dipl.passages, engraving_dipl.passages) |> collect


```


```{julia}


```

::: callout-tip
## Learn more about [sequence alignments](../utils/)
:::



## Application: basic vocabulary frequency
:::{.callout-warning}
## TBA
:::


## Works cited 